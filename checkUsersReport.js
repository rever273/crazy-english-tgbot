const { api } = require('./tokenManager');

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
async function checkAndSendMistakeReports(bot) {

    if (process.env.NODE_ENV == 'development') {
        // console.log('–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è.');
        return;
    }

    console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫...');

    try {
        const reports = await fetchMistakeReports();

        if (reports && reports.length > 0) {
            for (const report of reports) {
                const messageText = formatReportMessage(report);
                try {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é. –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.
                    const res = await bot.api.sendPhoto(
                        process.env.CHAT_ID_REPORT,
                        report.imageUrl,
                        { caption: messageText, parse_mode: 'HTML' }
                    );

                    if (res && res.message_id) {
                        console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–ª—è —Å–ª–æ–≤–∞ "${report.word}"`);
                        //TODO –¥–æ–±–∞–≤–ª—è–µ–º UPDATE SQL –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–º–µ—Ç–∏—Ç—å –∑–∞–ø–∏—Å—å –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é (sentToTg = true)
                    }
                } catch (err) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', err);
                }
            }
        } else {
            console.log('–ù–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.');
        }
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—à–∏–±–∫–∞—Ö:', err);
    }
}

/**
   * –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
   * –ü–æ–∫–∞ –Ω–µ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ API, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç.
   * @returns {Promise<Array<Object>>} ‚Äì –º–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –æ—à–∏–±–æ–∫
   */
async function fetchMistakeReports() {
    //TODO –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –∏ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–ª–µ–Ω–∏–π.
    //–î–µ–ª–∞–µ–º SQL –∑–∞–ø—Ä–æ—Å, –≥–¥–µ –∏—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å sentToTg = false (–ø–æ—Ç–æ–º –ø–æ–º–µ–Ω—è–µ–º –Ω–∞ true)

    //–ü—Ä–∏–º–µ—Ä (–≤—Ä–µ–º–µ–Ω–Ω—ã–π) –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—Å–µ–π—á–∞—Å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ)
    const sampleReport = {
        userId: "123",
        username: "developer",
        id: 97,
        word_id: 10,
        word: "from",
        level: 1,
        imageUrl: "https://crazyllama.app/images/dictionary/from.jpg",
        translation_0: "—Ç—ã",
        transcription_1: "[juÀê]",
        pronunciation_rus: "¬´–∏—é¬ª",
        description: "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –æ–¥–Ω–æ–º—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ª—é–¥—è–º, –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏, —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –∞–¥—Ä–µ—Å–∞—Ç–∞.",
        example_en: "Can you help me with this task?",
        example_ru: "–¢—ã –º–æ–π –ª—É—á—à–∏–π –¥—Ä—É–≥.",
        selectedOptions: ["transcription", "example"],
        comment: "ffff",
        sentToTg: false,
        timestamp: "2025-02-07T14:10:21.356Z"
    };

    // –í—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ —Å –æ–¥–Ω–∏–º –ø—Ä–∏–º–µ—Ä–æ–º.
    return [sampleReport];
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ —Å —ç–º–æ–¥–∂–∏.
 * @param {Object} report ‚Äì –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—à–∏–±–∫–∏
 * @returns {string} ‚Äì –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
 */
function formatReportMessage(report) {
    return (
        `üö® <b>–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Å–ª–æ–≤–µ!</b>\n\n` +
        `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>@${report.username} (ID: ${report.userId})</b>\n\n` +

        `üî§ –°–ª–æ–≤–æ: <b>${report.word}</b> (word_id: ${report.word_id}, level: ${report.level})\n` +
        `‚ñ´Ô∏è translation: <b>${report.translation_0}</b>\n` +
        `‚ñ´Ô∏è transcription: <b>${report.transcription_1}</b>\n` +
        `‚ñ´Ô∏è pronunciation: <b>${report.pronunciation_rus}</b>\n` +
        `‚ñ´Ô∏è description: <b>${report.description}</b>\n` +
        `‚ñ´Ô∏è example_en: <b>${report.example_en}</b>\n` +
        `‚ñ´Ô∏è example_ru: <b>${report.example_ru}</b>\n\n` +

        `‚úÖ –ì–¥–µ –æ—à–∏–±–∫–∞:\n<b>` +
        report.selectedOptions.join('\n') + '</b>\n\n' +
        `üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <b>${report.comment}</b>\n\n` +
        `‚è∞ <i>–í—Ä–µ–º—è: ${new Date(report.timestamp).toLocaleString()}</i>`
    );
}

module.exports = { checkAndSendMistakeReports };
